
heat_template_version: 2015-10-15

description: |
   #### Creates Rackspace Cloud Server
   #### Installs/configures swiftly, then removes Cloud Files containers.
   #### You must build in the same region as your Cloud Files containers.
   #### Author: Brian King
   #### version: 0.0.2a
   #### last modified: 2019-09-21

parameter_groups:

- label: Contact info
  parameters:
    - emailAddr

- label: Account info
  parameters:
    - rsUserName
    - rsRegion
    - rsApiKey

- label: Server info
  parameters:
    - serverFlavor

- label: Container info
  parameters:
    - containersToDelete

parameters:

# begin contact info

  emailAddr:
    type: string
    default: myemail@example.com
    label: This email address receives container deletion notifications.

# begin account info

  rsUserName:
    type: string
    default: rsUserName
    label: Your Rackspace Cloud username

  rsRegion:
    type: string
    default: lon
    label: Rackspace Cloud Region
    description: 'Use the region which hosts the Cloud Files you wish to delete.'
    constraints:
      - allowed_values:
        - dfw
        - hkg
        - iad
        - lon
        - ord
        - syd

  rsApiKey:
    type: string
    default: rsApiKey
    label: 'Your Rackspace Cloud API key'
    description: 'API key found under username > My Profile & Settings > Security Settings'

# begin container info

  containersToDelete:
    type: string
    label: 'Enter at least 1 Cloud Files container to delete. Separate container names by comma'
    default: 'myUnwantedContainer01,myUnwantedContainer02'

# begin server info

  serverFlavor:
    type: string
    default: 2 GB General Purpose v1
    label: Server Flavor Name or ID (such as 4 GB General Purpose v1)
    description: Choose flavor from list below
    constraints:
    - allowed_values:
      - 15 GB Memory v1
      - 30 GB Memory v1
      - 60 GB Memory v1
      - 120 GB Memory v1
      - 240 GB Memory v1
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      description: must be a valid Rackspace Cloud Server flavor.


resources:

  serverPass:
      type: OS::Heat::RandomString

  stackSSHKey:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: "OS::stack_name" }
      save_private_key: true

  serverBootVolume:
    type: OS::Cinder::Volume
    properties:
      image: 'CentOS 7 (PVHVM)'
      size: 50
      volume_type: SSD
      name:
        str_replace:
          params:
            $user: { get_param: [ rsUserName ]}
          template: $user-container-b-gone

  serverInstanceConfig:
     type: OS::Heat::SoftwareConfig
     properties:
       group: swiftly
       config:
         str_replace:
           params:
             $rsUserName: { get_param: rsUserName }
             $rsRegion: { get_param: rsRegion }
             $rsApiKey: { get_param: rsApiKey }
             $containersToDelete:  { get_param: containersToDelete }
           template: |
                      #!/bin/bash
                      #container-b-gone.sh
                      # installs/configures swiftly
                      # then creates a screen session per container
                      # and deletes them using swiftly commands
                      # copyright 2019 Brian King
                      # version: 0.0.1a
                      # license: Apache

                      yum -y install python-pip screen
                      pip install swiftly eventlet

                      cat > /root/.swiftly.conf << EOF
                      [swiftly]
                      auth_user = $rsUserName
                      auth_key = $rsApiKey
                      auth_url = https://identity.api.rackspacecloud.com/v2.0
                      region = $rsRegion
                      snet = True
                      EOF

                      cntrs_to_delete="$containersToDelete"

                      IFS=","

                      containers_array=( ${cntrs_to_delete} )

                      printf "%s\n" "${containers_array[@]}" >> /root/containers_list

                      for cntr in ${containers_array[@]}; do
                        screen -LdmS $cntr bash -c "swiftly -v --conf="/root/.swiftly.conf" --cache-auth --eventlet --concurrency=100 delete $cntr --until-empty --recursive; exec bash"; done


  serverInstance:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          params:
            $user: { get_param: [ rsUserName ]}
          template: $user-container-b-gone
      block_device_mapping:
        - device_name: vda
          volume_id: { get_resource: serverBootVolume }
          delete_on_termination: True
      admin_pass: { get_attr: [ serverPass, value ]}
      key_name: { get_resource: stackSSHKey }
      flavor: { get_param: serverFlavor }
      config_drive: True
      user_data: { get_resource: serverInstanceConfig }
      metadata:
        created_by: cn_swiftly_template
      networks:
        - network: '00000000-0000-0000-0000-000000000000'
        - network: '11111111-1111-1111-1111-111111111111'

outputs:

  serverPassDisplay:
    value: { get_attr: [ serverPass, value ] }
    description: 'Admin Password of Swiftly Server'

  serverPublicIPs:
     value: { get_attr: [serverInstance, networks, public] }
     description: 'Public IPs of Swiftly Server'

  stackPrivateSSHKey:
    value: { get_attr: ['stackSSHKey', 'private_key'] }
    description: 'private Key for accessing Swiftly Server'

  containersToDeleteDisplay:
    value:
      str_split:
        - ','
        - { get_param: containersToDelete }
    description: 'containers specified to delete'
